import os, sys

from elliptic_curves.fields.fq import base_field_from_modulus
from elliptic_curves.instantiations.bls12_381.bls12_381 import bls12_381_bilinear_pairing, bls12_381, Fq12

g1 = bls12_381.g1
g2 = bls12_381.g2
Fr = base_field_from_modulus(q=bls12_381.r)

pairing_g1_g2_serialised = [182, 137, 23, 202, 170, 5, 67, 168, 8, 197, 57, 8, 246, 148, 209, 182, 231, 179, 141, 233, 12, 233, 216, 61, 80, 92, 161, 239, 27, 68, 45, 39, 39, 215, 208, 104, 49, 216, 178, 167, 146, 10, 252, 113, 216, 235, 80, 18, 15, 23, 160, 234, 152, 42, 136, 89, 29, 159, 67, 80, 62, 148, 168, 241, 171, 175, 46, 69, 137, 246, 90, 175, 183, 146, 60, 72, 69, 64, 168, 104, 136, 52, 50, 165, 198, 14, 117, 134, 11, 17, 229, 70, 91, 28, 154, 8, 135, 62, 194, 158, 132, 76, 28, 136, 140, 179, 150, 147, 48, 87, 255, 221, 84, 27, 3, 165, 34, 14, 218, 22, 178, 179, 166, 114, 142, 166, 120, 3, 76, 227, 156, 104, 57, 242, 3, 151, 32, 45, 124, 92, 68, 187, 104, 19, 79, 147, 25, 60, 236, 33, 80, 49, 177, 115, 153, 87, 122, 29, 229, 255, 31, 91, 6, 102, 189, 216, 144, 124, 97, 167, 101, 30, 78, 121, 224, 55, 41, 81, 80, 90, 7, 250, 115, 194, 87, 136, 219, 110, 184, 2, 53, 25, 165, 170, 151, 181, 31, 28, 173, 29, 67, 216, 170, 187, 255, 77, 195, 25, 199, 154, 88, 202, 252, 3, 82, 24, 116, 124, 47, 117, 218, 248, 242, 251, 124, 0, 196, 77, 168, 91, 18, 145, 19, 23, 61, 71, 34, 245, 178, 1, 182, 180, 69, 64, 98, 233, 234, 139, 167, 140, 92, 163, 202, 218, 247, 35, 139, 71, 186, 206, 92, 229, 97, 128, 74, 225, 107, 143, 75, 99, 218, 70, 69, 184, 69, 122, 147, 121, 60, 189, 100, 167, 37, 79, 21, 7, 129, 1, 157, 232, 126, 228, 38, 130, 148, 15, 62, 112, 168, 134, 131, 213, 18, 187, 44, 63, 183, 178, 67, 77, 165, 222, 219, 178, 208, 179, 251, 132, 135, 200, 77, 160, 213, 195, 21, 189, 214, 156, 70, 251, 5, 210, 55, 99, 242, 25, 26, 171, 213, 213, 194, 225, 42, 16, 184, 240, 2, 255, 104, 27, 253, 27, 46, 224, 191, 97, 157, 128, 210, 167, 149, 235, 34, 242, 170, 123, 133, 213, 255, 182, 113, 167, 12, 148, 128, 159, 13, 175, 197, 183, 62, 162, 251, 6, 87, 186, 226, 51, 115, 180, 147, 27, 201, 250, 50, 30, 136, 72, 239, 120, 137, 78, 152, 123, 255, 21, 13, 125, 103, 26, 238, 48, 179, 147, 26, 200, 197, 14, 11, 59, 8, 104, 239, 252, 56, 191, 72, 205, 36, 180, 184, 17, 162, 153, 90, 194, 160, 145, 34, 190, 217, 253, 159, 160, 197, 16, 168, 123, 16, 41, 8, 54, 173, 6, 200, 32, 51, 151, 181, 106, 120, 233, 160, 198, 28, 119, 229, 108, 203, 79, 27, 195, 211, 252, 174, 167, 85, 15, 53, 3, 239, 227, 15, 45, 36, 240, 8, 145, 203, 69, 98, 6, 5, 252, 250, 164, 41, 38, 135, 179, 167, 219, 124, 28, 5, 84, 169, 53, 121, 232, 137, 161, 33, 253, 143, 114, 100, 155, 36, 2, 153, 106, 8, 77, 35, 129, 197, 4, 49, 102, 103, 59, 56, 73, 228, 253, 30, 126, 228, 175, 36, 170, 142, 212, 67, 245, 109, 253, 107, 104, 255, 222, 68, 53, 169, 44, 215, 164, 172, 59, 199, 126, 26, 208, 203, 114, 134, 6, 207, 8, 191, 99, 134, 229, 65, 15]
pairing_g1_g2 = Fq12.deserialise(pairing_g1_g2_serialised)

def test_pairing() -> bool:
    miller_output_twisted_curve = bls12_381_bilinear_pairing.miller_loop_on_twisted_curve(g1,g2,'quadratic')

    pairing_base_curve = bls12_381_bilinear_pairing.pairing(g1,g2)
    pairing_twisted_curve = miller_output_twisted_curve.power(3*(bls12_381.q**12-1)//bls12_381.r)

    assert(pairing_base_curve == pairing_g1_g2)
    assert(pairing_base_curve == pairing_twisted_curve)

    for i in range(5):
        l = Fr.generate_random_point().x
        assert(bls12_381_bilinear_pairing.pairing(g1.multiply(l),g2) == pairing_base_curve.power(l))
        assert(bls12_381_bilinear_pairing.pairing(g1,g2.multiply(l)) == pairing_base_curve.power(l))
    
    return True

assert(test_pairing())

print("BLS12_381: all tests successful")

